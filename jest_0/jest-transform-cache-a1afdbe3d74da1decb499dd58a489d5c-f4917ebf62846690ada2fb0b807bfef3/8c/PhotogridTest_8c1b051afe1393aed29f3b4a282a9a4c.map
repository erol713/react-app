{"version":3,"sources":["PhotogridTest.js"],"names":["adapter","Adapter","setUp","props","component","describe","it","content","find","expect","length","toBe","beforeEach","header","text"],"mappings":";;AAAA;;AACA;;AACA;;AAIA;;;;AAFA,uBAAU;AAAEA,EAAAA,OAAO,EAAE,IAAIC,8BAAJ;AAAX,CAAV;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAc;AAAA,MAAbC,KAAa,uEAAP,EAAO;AACxB,MAAMC,SAAS,GAAG,qBAAS,gCAAC,qBAAD,EAAeD,KAAf,CAAT,CAAlB;AACA,SAAOC,SAAP;AAEH,CAJD;;AAKAC,QAAQ,CAAC,+BAAD,EAAkC,YAAI;AAC1CC,EAAAA,EAAE,CAAC,4BAAD,EAA+B,YAAM;AACnC,QAAMF,SAAS,GAAG,qBAAS,gCAAC,qBAAD,OAAT,CAAlB;AACA,QAAMG,OAAO,GAAGH,SAAS,CAACI,IAAV,CAAe,aAAf,CAAhB;AACAC,IAAAA,MAAM,CAACF,OAAO,CAACG,MAAT,CAAN,CAAuBC,IAAvB,CAA4B,CAA5B;AACH,GAJC,CAAF;AAKH,CANO,CAAR;AAWAN,QAAQ,CAAC,0BAAD,EAA6B,YAAI;AAErC,MAAID,SAAJ;AACAQ,EAAAA,UAAU,CAAE,YAAI;AACZR,IAAAA,SAAS,GAAGF,KAAK,EAAjB;AACH,GAFS,CAAV;AAIAI,EAAAA,EAAE,CAAC,mBAAD,EAAsB,YAAM;AAC1B,QAAMO,MAAM,GAAGT,SAAS,CAACI,IAAV,CAAe,IAAf,CAAf;AACAC,IAAAA,MAAM,CAACI,MAAM,CAACH,MAAR,CAAN,CAAsBC,IAAtB,CAA2B,CAA3B;AACH,GAHC,CAAF;AAIAL,EAAAA,EAAE,CAAC,4BAAD,EAA+B,YAAM;AACnC,QAAMO,MAAM,GAAGT,SAAS,CAACI,IAAV,CAAe,IAAf,CAAf;AACAC,IAAAA,MAAM,CAACI,MAAM,CAACC,IAAP,EAAD,CAAN,CAAsBH,IAAtB,CAA2B,kBAA3B;AACH,GAHC,CAAF;AAIH,CAfO,CAAR","sourcesContent":["import React from 'react';\nimport { configure, mount, shallow } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\n\nconfigure({ adapter: new Adapter() });\n\nimport Photogrid from '../../components/Photogrid';\n\nconst setUp = (props={}) => {\n    const component = shallow( <Photogrid {...props} /> );\n    return component;\n\n}\ndescribe('This is a Photogrid component', ()=>{\n    it('There is a photogrid class', () => {\n        const component = shallow( <Photogrid /> );        \n        const content = component.find('.photo-grid');\n        expect(content.length).toBe(1);\n    });\n})\n\n\n\n\ndescribe('This is a Main component', ()=>{\n\n    let component;\n    beforeEach( ()=>{\n        component = setUp();\n    })\n\n    it('There is a header', () => {\n        const header = component.find('h1');\n        expect(header.length).toBe(1);\n    });\n    it('Header is New Social Media', () => {\n        const header = component.find('h1');\n        expect(header.text()).toBe('New Social Media');\n    });\n})\n"]}