ee9bee230aabef77032e08348b818ba1
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactRouterDom = require("react-router-dom");

var _semanticUiReact = require("semantic-ui-react");

var _reactTransitionGroup = require("react-transition-group");

var _redux = require("redux");

var _reactRedux = require("react-redux");

var actionCreators = _interopRequireWildcard(require("../redux/actions/index"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Photo =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Photo, _React$Component);

  function Photo(props) {
    var _this;

    _classCallCheck(this, Photo);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Photo).call(this, props));
    _this.incrementLike = _this.incrementLike.bind(_assertThisInitialized(_this));
    _this.incrementDislikes = _this.incrementDislikes.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(Photo, [{
    key: "incrementLike",
    value: function incrementLike(i) {
      this.props.increment.bind(null, i);
    }
  }, {
    key: "incrementDislikes",
    value: function incrementDislikes(i) {
      this.props.dislike.bind(null, i);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          post = _this$props.post,
          i = _this$props.i,
          comments = _this$props.comments;
      var count = post.likes - post.dislikes;
      return _react["default"].createElement("figure", {
        className: "grid-figure"
      }, _react["default"].createElement("div", {
        className: "grid-photo-wrap"
      }, _react["default"].createElement(_reactRouterDom.Link, {
        to: "/view/".concat(post.code)
      }, _react["default"].createElement("img", {
        src: post.display_src,
        alt: post.caption,
        className: "grid-photo"
      })), _react["default"].createElement(_reactTransitionGroup.CSSTransitionGroup, {
        transitionName: "like",
        transitionEnterTimeout: 500,
        transitionLeaveTimeout: 500
      }, _react["default"].createElement("span", {
        key: post.likes,
        className: "likes-heart"
      }, count)), _react["default"].createElement(_reactTransitionGroup.CSSTransitionGroup, {
        transitionName: "like",
        transitionEnterTimeout: 500,
        transitionLeaveTimeout: 500
      }, _react["default"].createElement("span", {
        key: post.dislikes,
        className: "dislikes-heart"
      }, count))), _react["default"].createElement("figcaption", null, _react["default"].createElement("p", null, post.caption), _react["default"].createElement("div", null, _react["default"].createElement(_semanticUiReact.Button.Group, {
        icon: true
      }, _react["default"].createElement(_semanticUiReact.Button, {
        size: "large",
        as: "div",
        labelPosition: "right"
      }, _react["default"].createElement(_semanticUiReact.Button, {
        color: "red",
        onClick: this.props.increment.bind(null, i),
        icon: true
      }, _react["default"].createElement(_semanticUiReact.Icon, {
        name: "thumbs up"
      }))), _react["default"].createElement(_semanticUiReact.Label, {
        size: "large"
      }, count), _react["default"].createElement(_semanticUiReact.Button, {
        size: "large",
        as: "div",
        labelPosition: "left"
      }, _react["default"].createElement(_semanticUiReact.Button, {
        color: "blue",
        onClick: this.incrementDislikes(i),
        icon: true
      }, _react["default"].createElement(_semanticUiReact.Icon, {
        name: "thumbs down"
      }))))), _react["default"].createElement("br", null), _react["default"].createElement("div", null, _react["default"].createElement(_semanticUiReact.Button, {
        as: "div",
        labelPosition: "right"
      }, _react["default"].createElement(_semanticUiReact.Label, {
        basic: true,
        pointing: "right"
      }, comments[post.code] ? comments[post.code].length : 0), _react["default"].createElement(_reactRouterDom.Link, {
        to: "/view/".concat(post.code)
      }, _react["default"].createElement(_semanticUiReact.Button, {
        color: "blue",
        icon: true
      }, _react["default"].createElement(_semanticUiReact.Icon, {
        name: "comments"
      }), " Comments"))))));
    }
  }]);

  return Photo;
}(_react["default"].Component);

function mapStateToProps(state) {
  return {
    posts: state.posts,
    comments: state.comments,
    users: state.users
  };
}

function mapDispachToProps(dispatch) {
  return (0, _redux.bindActionCreators)(actionCreators, dispatch);
}

var _default = Photo;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBob3RvLmpzIl0sIm5hbWVzIjpbIlBob3RvIiwicHJvcHMiLCJpbmNyZW1lbnRMaWtlIiwiYmluZCIsImluY3JlbWVudERpc2xpa2VzIiwiaSIsImluY3JlbWVudCIsImRpc2xpa2UiLCJwb3N0IiwiY29tbWVudHMiLCJjb3VudCIsImxpa2VzIiwiZGlzbGlrZXMiLCJjb2RlIiwiZGlzcGxheV9zcmMiLCJjYXB0aW9uIiwibGVuZ3RoIiwiUmVhY3QiLCJDb21wb25lbnQiLCJtYXBTdGF0ZVRvUHJvcHMiLCJzdGF0ZSIsInBvc3RzIiwidXNlcnMiLCJtYXBEaXNwYWNoVG9Qcm9wcyIsImRpc3BhdGNoIiwiYWN0aW9uQ3JlYXRvcnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBR01BLEs7Ozs7O0FBQ0wsaUJBQVlDLEtBQVosRUFBbUI7QUFBQTs7QUFBQTs7QUFDbEIsK0VBQU1BLEtBQU47QUFFQSxVQUFLQyxhQUFMLEdBQXFCLE1BQUtBLGFBQUwsQ0FBbUJDLElBQW5CLCtCQUFyQjtBQUNBLFVBQUtDLGlCQUFMLEdBQXlCLE1BQUtBLGlCQUFMLENBQXVCRCxJQUF2QiwrQkFBekI7QUFKa0I7QUFLbEI7Ozs7a0NBRWFFLEMsRUFBRTtBQUNmLFdBQUtKLEtBQUwsQ0FBV0ssU0FBWCxDQUFxQkgsSUFBckIsQ0FBMEIsSUFBMUIsRUFBZ0NFLENBQWhDO0FBQ0E7OztzQ0FFaUJBLEMsRUFBRTtBQUNuQixXQUFLSixLQUFMLENBQVdNLE9BQVgsQ0FBbUJKLElBQW5CLENBQXdCLElBQXhCLEVBQThCRSxDQUE5QjtBQUNBOzs7NkJBRVc7QUFBQSx3QkFDeUIsS0FBS0osS0FEOUI7QUFBQSxVQUNHTyxJQURILGVBQ0dBLElBREg7QUFBQSxVQUNTSCxDQURULGVBQ1NBLENBRFQ7QUFBQSxVQUNZSSxRQURaLGVBQ1lBLFFBRFo7QUFFWCxVQUFJQyxLQUFLLEdB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QixTQUNRLGdDQUFDLHFCQUFEO0FBQU0sUUFBQSxJQUFJLEVBQUM7QUFBWCxRQURSLGNBREosQ0FMSixDQURKLENBcEJKLENBaEJKLENBREo7QUFxRE47Ozs7RUF4RWtCSSxrQkFBTUMsUzs7QUEyRTFCLFNBQVNDLGVBQVQsQ0FBeUJDLEtBQXpCLEVBQStCO0FBQzNCLFNBQU87QUFDSEMsSUFBQUEsS0FBSyxFQUFFRCxLQUFLLENBQUNDLEtBRFY7QUFFSFosSUFBQUEsUUFBUSxFQUFFVyxLQUFLLENBQUNYLFFBRmI7QUFHSGEsSUFBQUEsS0FBSyxFQUFFRixLQUFLLENBQUNFO0FBSFYsR0FBUDtBQUtIOztBQUNELFNBQVNDLGlCQUFULENBQTJCQyxRQUEzQixFQUFxQztBQUNwQyxTQUFPLCtCQUFtQkMsY0FBbkIsRUFBbUNELFFBQW5DLENBQVA7QUFDQTs7ZUFFY3hCLEsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgQnV0dG9uLCBJY29uLCBMYWJlbCB9IGZyb20gJ3NlbWFudGljLXVpLXJlYWN0JztcbmltcG9ydCB7IENTU1RyYW5zaXRpb25Hcm91cCB9IGZyb20gJ3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAnO1xuXG5pbXBvcnQgeyBiaW5kQWN0aW9uQ3JlYXRvcnMgfSBmcm9tICdyZWR1eCc7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0ICogYXMgYWN0aW9uQ3JlYXRvcnMgZnJvbSAnLi4vcmVkdXgvYWN0aW9ucy9pbmRleCc7XG5cblxuY2xhc3MgUGhvdG8gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXHRjb25zdHJ1Y3Rvcihwcm9wcykge1xuXHRcdHN1cGVyKHByb3BzKTtcblxuXHRcdHRoaXMuaW5jcmVtZW50TGlrZSA9IHRoaXMuaW5jcmVtZW50TGlrZS5iaW5kKHRoaXMpO1xuXHRcdHRoaXMuaW5jcmVtZW50RGlzbGlrZXMgPSB0aGlzLmluY3JlbWVudERpc2xpa2VzLmJpbmQodGhpcyk7XG5cdH1cblx0XG5cdGluY3JlbWVudExpa2UoaSl7XG5cdFx0dGhpcy5wcm9wcy5pbmNyZW1lbnQuYmluZChudWxsLCBpKTtcblx0fTtcblxuXHRpbmNyZW1lbnREaXNsaWtlcyhpKXtcblx0XHR0aGlzLnByb3BzLmRpc2xpa2UuYmluZChudWxsLCBpKTtcblx0fTtcblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyBwb3N0LCBpLCBjb21tZW50cyB9ID0gdGhpcy5wcm9wcztcblx0XHRsZXQgY291bnQgPSBwb3N0Lmxpa2VzIC0gcG9zdC5kaXNsaWtlcyA7XG4gICAgICAgIHJldHVybihcbiAgICAgICAgICAgIDxmaWd1cmUgY2xhc3NOYW1lPVwiZ3JpZC1maWd1cmVcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQtcGhvdG8td3JhcFwiPlxuICAgICAgICAgICAgICAgICAgICA8TGluayB0bz17YC92aWV3LyR7cG9zdC5jb2RlfWB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e3Bvc3QuZGlzcGxheV9zcmN9IGFsdD17cG9zdC5jYXB0aW9ufSBjbGFzc05hbWU9XCJncmlkLXBob3RvXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICA8Q1NTVHJhbnNpdGlvbkdyb3VwIHRyYW5zaXRpb25OYW1lPVwibGlrZVwiIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb25FbnRlclRpbWVvdXQ9ezUwMH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uTGVhdmVUaW1lb3V0PXs1MDB9ID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGtleT17IHBvc3QubGlrZXMgfSBjbGFzc05hbWU9XCJsaWtlcy1oZWFydFwiPnsgY291bnQgfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPC9DU1NUcmFuc2l0aW9uR3JvdXA+XG4gICAgICAgICAgICAgICAgICAgIDxDU1NUcmFuc2l0aW9uR3JvdXAgdHJhbnNpdGlvbk5hbWU9XCJsaWtlXCIgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbkVudGVyVGltZW91dD17NTAwfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb25MZWF2ZVRpbWVvdXQ9ezUwMH0gPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4ga2V5PXsgcG9zdC5kaXNsaWtlcyB9IGNsYXNzTmFtZT1cImRpc2xpa2VzLWhlYXJ0XCI+eyBjb3VudCB9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8L0NTU1RyYW5zaXRpb25Hcm91cD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZmlnY2FwdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgPHA+e3Bvc3QuY2FwdGlvbn08L3A+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgPiBcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24uR3JvdXAgaWNvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIHNpemU9XCJsYXJnZVwiICAgYXM9J2RpdicgbGFiZWxQb3NpdGlvbj0ncmlnaHQnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGNvbG9yPVwicmVkXCIgb25DbGljaz17IHRoaXMucHJvcHMuaW5jcmVtZW50LmJpbmQobnVsbCwgaSkgIH0gaWNvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxJY29uIG5hbWU9J3RodW1icyB1cCcgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPExhYmVsIHNpemU9XCJsYXJnZVwiID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgY291bnQgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGFiZWw+IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIHNpemU9XCJsYXJnZVwiICBhcz0nZGl2JyBsYWJlbFBvc2l0aW9uPSdsZWZ0Jz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBjb2xvcj1cImJsdWVcIiBvbkNsaWNrPXsgdGhpcy5pbmNyZW1lbnREaXNsaWtlcyhpKSB9IGljb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SWNvbiBuYW1lPSd0aHVtYnMgZG93bicgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+ICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uPiBcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uLkdyb3VwPiAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGJyLz5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgPiAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBhcz0nZGl2JyBsYWJlbFBvc2l0aW9uPSdyaWdodCc+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMYWJlbCBiYXNpYyBwb2ludGluZz0ncmlnaHQnPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGNvbW1lbnRzW3Bvc3QuY29kZV0gPyBjb21tZW50c1twb3N0LmNvZGVdLmxlbmd0aCA6IDAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGFiZWw+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TGluayB0bz17YC92aWV3LyR7cG9zdC5jb2RlfWB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGNvbG9yPVwiYmx1ZVwiIGljb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEljb24gbmFtZT0nY29tbWVudHMnIC8+IENvbW1lbnRzICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uPiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICBcbiAgICAgICAgICAgICAgICA8L2ZpZ2NhcHRpb24+XG4gICAgICAgICAgICA8L2ZpZ3VyZT5cbiAgICAgICAgKVxuXHR9XG59XG5cbmZ1bmN0aW9uIG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSl7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcG9zdHM6IHN0YXRlLnBvc3RzLFxuICAgICAgICBjb21tZW50czogc3RhdGUuY29tbWVudHMsXG4gICAgICAgIHVzZXJzOiBzdGF0ZS51c2Vyc1xuICAgIH1cbn1cbmZ1bmN0aW9uIG1hcERpc3BhY2hUb1Byb3BzKGRpc3BhdGNoKSB7XG5cdHJldHVybiBiaW5kQWN0aW9uQ3JlYXRvcnMoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgUGhvdG87XG4iXX0=