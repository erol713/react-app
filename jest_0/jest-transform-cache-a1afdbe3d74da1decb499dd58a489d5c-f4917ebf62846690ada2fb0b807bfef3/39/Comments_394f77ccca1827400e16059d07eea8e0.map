{"version":3,"sources":["Comments.jsx"],"names":["Comments","props","renderComment","bind","handleSubmit","comment","i","user","text","removeComment","match","params","postId","e","preventDefault","author","refs","value","addComment","commentForm","reset","postComments","map","React","Component","mapStateToProps","state","posts","comments","users","mapDispachToProps","dispatch","actionCreators"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,Q;;;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,+BAArB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,+BAApB;AAHe;AAKlB;;;;kCACaE,O,EAASC,C,EAAE;AACrB,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,GAAG,EAAEA;AAA9B,SACI,2CACI,gDAASD,OAAO,CAACE,IAAjB,CADJ,EAESF,OAAO,CAACG,IAFjB,EAGI;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWQ,aAAX,CAAyBN,IAAzB,CAA8B,IAA9B,EAAoC,KAAKF,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBC,MAA5D,EAAoEN,CAApE;AAA5C,gBAHJ,CADJ,CADJ;AAWH;;;iCAEYO,C,EAAE;AACXA,MAAAA,CAAC,CAACC,cAAF;AADW,UAEJF,MAFI,GAEO,KAAKX,KAAL,CAAWS,KAAX,CAAiBC,MAFxB,CAEJC,MAFI;AAGX,UAAMG,MAAM,GAAG,KAAKC,IAAL,CAAUD,MAAV,CAAiBE,KAAhC;AACA,UAAMZ,OAAO,GAAG,KAAKW,IAAL,CAAUX,OAAV,CAAkBY,KAAlC;AACA,WAAKhB,KAAL,CAAWiB,UAAX,CAAsBN,MAAtB,EAA8BG,MAA9B,EAAsCV,OAAtC;AACA,WAAKW,IAAL,CAAUG,WAAV,CAAsBC,KAAtB;AACH;;;6BAEQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC;AAAf,SACK,KAAKnB,KAAL,CAAWoB,YAAX,CAAwBC,GAAxB,CAA4B,KAAKpB,aAAjC,CADL,EAEI;AAAM,QAAA,GAAG,EAAC,aAAV;AAAwB,QAAA,SAAS,EAAC,cAAlC;AAAiD,QAAA,QAAQ,EAAE,KAAKE;AAAhE,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAC,QAAvB;AAAgC,QAAA,WAAW,EAAC;AAA5C,QADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAC,SAAvB;AAAiC,QAAA,WAAW,EAAC;AAA7C,QAFJ,EAGI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,MAAM;AAA3B,QAHJ,CAFJ,CADJ;AAUH;;;;EAzCkBmB,kBAAMC,S;;AA0C5B;;AAED,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAC3B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADV;AAEHC,IAAAA,QAAQ,EAAEF,KAAK,CAACE,QAFb;AAGHC,IAAAA,KAAK,EAAEH,KAAK,CAACG;AAHV,GAAP;AAKH;;AAED,SAASC,iBAAT,CAA2BC,QAA3B,EAAoC;AAChC,SAAO,+BAAmBC,cAAnB,EAAmCD,QAAnC,CAAP;AAEH;;eAIc,yBAAQN,eAAR,EAAyBK,iBAAzB,EAA4C9B,QAA5C,C","sourcesContent":["import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../redux/actions/index';\n\nclass Comments extends React.Component{\n    constructor(props) {\n        super(props);\n        this.renderComment = this.renderComment.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    };\n    renderComment(comment, i){\n        return(\n            <div className=\"comment\" key={i}>\n                <p>\n                    <strong>{comment.user}</strong>\n                        {comment.text}                    \n                    <button className=\"remove-comment\" onClick={this.props.removeComment.bind(null, this.props.match.params.postId, i)} >\n                        &times;\n                    </button>\n                </p>\n            </div>\n        )\n    }   \n\n    handleSubmit(e){\n        e.preventDefault();\n        const{ postId } = this.props.match.params;\n        const author = this.refs.author.value;\n        const comment = this.refs.comment.value;\n        this.props.addComment(postId, author, comment);\n        this.refs.commentForm.reset();\n    }\n\n    render() {\n        return(\n            <div className=\"comments\">\n                {this.props.postComments.map(this.renderComment)}\n                <form ref=\"commentForm\" className=\"comment-form\" onSubmit={this.handleSubmit}>\n                    <input type=\"text\" ref=\"author\" placeholder=\"author\"/>\n                    <input type=\"text\" ref=\"comment\" placeholder=\"comment\"/>\n                    <input type=\"submit\" hidden />\n                </form>\n            </div>\n        )\n    }\n};\n\nfunction mapStateToProps(state){\n    return {\n        posts: state.posts,\n        comments: state.comments,\n        users: state.users\n    }\n}\n\nfunction mapDispachToProps(dispatch){\n    return bindActionCreators(actionCreators, dispatch);\n\n}\n\n\n\nexport default connect(mapStateToProps, mapDispachToProps)(Comments);"]}