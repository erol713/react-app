129ff0c3021852255813a7624ac8ddbc
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.increment = increment;
exports.dislike = dislike;
exports.addComment = addComment;
exports.removeComment = removeComment;
exports.addUser = addUser;
exports.editUser = editUser;
exports.deleteUser = deleteUser;

// increment likes
function increment(index) {
  return {
    type: 'INCREMENT_LIKES',
    index: index
  };
} //increment dislikes


function dislike(index) {
  return {
    type: 'INCREMENT_DISLIKES',
    index: index
  };
} // add comment


function addComment(postId, author, comment) {
  console.log('dispatching add comment');
  return {
    type: 'ADD_COMMENT',
    postId: postId,
    author: author,
    comment: comment
  };
} // remove comment


function removeComment(postId, i) {
  console.log('dispatching remove comment: ');
  return {
    type: 'REMOVE_COMMENT',
    i: i,
    postId: postId
  };
} // add user


function addUser(firstName, lastName, username, email) {
  console.log('dispatching add user');
  return {
    type: 'ADD_USER',
    firstName: firstName,
    lastName: lastName,
    username: username,
    email: email
  };
} // edit user


function editUser(index, firstName, lastName, username, email) {
  console.log('dispatching edit user');
  return {
    type: 'EDIT_USER',
    index: index,
    firstName: firstName,
    lastName: lastName,
    username: username,
    email: email
  };
} // delete user


function deleteUser(index) {
  console.log('dispatching delete user');
  return {
    type: 'DELETE_USER',
    index: index
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImluY3JlbWVudCIsImluZGV4IiwidHlwZSIsImRpc2xpa2UiLCJhZGRDb21tZW50IiwicG9zdElkIiwiYXV0aG9yIiwiY29tbWVudCIsImNvbnNvbGUiLCJsb2ciLCJyZW1vdmVDb21tZW50IiwiaSIsImFkZFVzZXIiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsInVzZXJuYW1lIiwiZW1haWwiLCJlZGl0VXNlciIsImRlbGV0ZVVzZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNPLFNBQVNBLFNBQVQsQ0FBbUJDLEtBQW5CLEVBQXlCO0FBQzlCLFNBQU07QUFDRkMsSUFBQUEsSUFBSSxFQUFFLGlCQURKO0FBRUZELElBQUFBLEtBQUssRUFBTEE7QUFGRSxHQUFOO0FBSUQsQyxDQUNEOzs7QUFDTyxTQUFTRSxPQUFULENBQWlCRixLQUFqQixFQUF1QjtBQUM1QixTQUFNO0FBQ0ZDLElBQUFBLElBQUksRUFBRSxvQkFESjtBQUVGRCxJQUFBQSxLQUFLLEVBQUxBO0FBRkUsR0FBTjtBQUlELEMsQ0FDRDs7O0FBQ08sU0FBU0csVUFBVCxDQUFvQkMsTUFBcEIsRUFBNEJDLE1BQTVCLEVBQW9DQyxPQUFwQyxFQUE0QztBQUNqREMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkseUJBQVo7QUFDQSxTQUFNO0FBQ0ZQLElBQUFBLElBQUksRUFBRSxhQURKO0FBRUZHLElBQUFBLE1BQU0sRUFBTkEsTUFGRTtBQUdGQyxJQUFBQSxNQUFNLEVBQU5BLE1BSEU7QUFJRkMsSUFBQUEsT0FBTyxFQUFQQTtBQUpFLEdBQU47QUFNRCxDLENBQ0Q7OztBQUNPLFNBQVNHLGFBQVQsQ0FBdUJMLE1BQXZCLEVBQStCTSxDQUEvQixFQUFpQztBQUN0Q0gsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksOEJBQVo7QUFDQSxTQUFNO0FBQ0ZQLElBQUFBLElBQUksRUFBRSxnQkFESjtBQUVGUyxJQUFBQSxDQUFDLEVBQURBLENBRkU7QUFHRk4sSUFBQUEsTUFBTSxFQUFOQTtBQUhFLEdBQU47QUFLRCxDLENBQ0Q7OztBQUNPLFNBQVNPLE9BQVQsQ0FBaUJDLFNBQWpCLEVBQTRCQyxRQUE1QixFQUFzQ0MsUUFBdEMsRUFBZ0RDLEtBQWhELEVBQXNEO0FBQzNEUixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxzQkFBWjtBQUNBLFNBQU07QUFDRlAsSUFBQUEsSUFBSSxFQUFFLFVBREo7QUFFRlcsSUFBQUEsU0FBUyxFQUFUQSxTQUZFO0FBR0ZDLElBQUFBLFFBQVEsRUFBUkEsUUFIRTtBQUlGQyxJQUFBQSxRQUFRLEVBQVJBLFFBSkU7QUFLRkMsSUFBQUEsS0FBSyxFQUFMQTtBQUxFLEdBQU47QUFPRCxDLENBQ0Q7OztBQUNPLFNBQVNDLFFBQVQsQ0FBa0JoQixLQUFsQixFQUF5QlksU0FBekIsRUFBb0NDLFFBQXBDLEVBQThDQyxRQUE5QyxFQUF3REMsS0FBeEQsRUFBOEQ7QUFDbkVSLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHVCQUFaO0FBQ0EsU0FBTTtBQUNGUCxJQUFBQSxJQUFJLEVBQUUsV0FESjtBQUVGRCxJQUFBQSxLQUFLLEVBQUxBLEtBRkU7QUFHRlksSUFBQUEsU0FBUyxFQUFUQSxTQUhFO0FBSUZDLElBQUFBLFFBQVEsRUFBUkEsUUFKRTtBQUtGQyxJQUFBQSxRQUFRLEVBQVJBLFFBTEU7QUFNRkMsSUFBQUEsS0FBSyxFQUFMQTtBQU5FLEdBQU47QUFRRCxDLENBQ0Q7OztBQUNPLFNBQVNFLFVBQVQsQ0FBb0JqQixLQUFwQixFQUEwQjtBQUMvQk8sRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkseUJBQVo7QUFDQSxTQUFNO0FBQ0ZQLElBQUFBLElBQUksRUFBRSxhQURKO0FBRUZELElBQUFBLEtBQUssRUFBTEE7QUFGRSxHQUFOO0FBSUQiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbmNyZW1lbnQgbGlrZXNcbmV4cG9ydCBmdW5jdGlvbiBpbmNyZW1lbnQoaW5kZXgpe1xuICByZXR1cm57XG4gICAgICB0eXBlOiAnSU5DUkVNRU5UX0xJS0VTJyxcbiAgICAgIGluZGV4XG4gIH1cbn1cbi8vaW5jcmVtZW50IGRpc2xpa2VzXG5leHBvcnQgZnVuY3Rpb24gZGlzbGlrZShpbmRleCl7XG4gIHJldHVybntcbiAgICAgIHR5cGU6ICdJTkNSRU1FTlRfRElTTElLRVMnLFxuICAgICAgaW5kZXhcbiAgfVxufVxuLy8gYWRkIGNvbW1lbnRcbmV4cG9ydCBmdW5jdGlvbiBhZGRDb21tZW50KHBvc3RJZCwgYXV0aG9yLCBjb21tZW50KXtcbiAgY29uc29sZS5sb2coJ2Rpc3BhdGNoaW5nIGFkZCBjb21tZW50Jyk7XG4gIHJldHVybntcbiAgICAgIHR5cGU6ICdBRERfQ09NTUVOVCcsXG4gICAgICBwb3N0SWQsXG4gICAgICBhdXRob3IsXG4gICAgICBjb21tZW50XG4gIH1cbn1cbi8vIHJlbW92ZSBjb21tZW50XG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlQ29tbWVudChwb3N0SWQsIGkpe1xuICBjb25zb2xlLmxvZygnZGlzcGF0Y2hpbmcgcmVtb3ZlIGNvbW1lbnQ6ICcpO1xuICByZXR1cm57XG4gICAgICB0eXBlOiAnUkVNT1ZFX0NPTU1FTlQnLFxuICAgICAgaSxcbiAgICAgIHBvc3RJZFxuICB9XG59XG4vLyBhZGQgdXNlclxuZXhwb3J0IGZ1bmN0aW9uIGFkZFVzZXIoZmlyc3ROYW1lLCBsYXN0TmFtZSwgdXNlcm5hbWUsIGVtYWlsKXtcbiAgY29uc29sZS5sb2coJ2Rpc3BhdGNoaW5nIGFkZCB1c2VyJyk7XG4gIHJldHVybntcbiAgICAgIHR5cGU6ICdBRERfVVNFUicsXG4gICAgICBmaXJzdE5hbWUsXG4gICAgICBsYXN0TmFtZSwgXG4gICAgICB1c2VybmFtZSwgXG4gICAgICBlbWFpbFxuICB9XG59XG4vLyBlZGl0IHVzZXJcbmV4cG9ydCBmdW5jdGlvbiBlZGl0VXNlcihpbmRleCwgZmlyc3ROYW1lLCBsYXN0TmFtZSwgdXNlcm5hbWUsIGVtYWlsKXtcbiAgY29uc29sZS5sb2coJ2Rpc3BhdGNoaW5nIGVkaXQgdXNlcicpO1xuICByZXR1cm57XG4gICAgICB0eXBlOiAnRURJVF9VU0VSJyxcbiAgICAgIGluZGV4LFxuICAgICAgZmlyc3ROYW1lLFxuICAgICAgbGFzdE5hbWUsIFxuICAgICAgdXNlcm5hbWUsIFxuICAgICAgZW1haWxcbiAgfVxufVxuLy8gZGVsZXRlIHVzZXJcbmV4cG9ydCBmdW5jdGlvbiBkZWxldGVVc2VyKGluZGV4KXtcbiAgY29uc29sZS5sb2coJ2Rpc3BhdGNoaW5nIGRlbGV0ZSB1c2VyJyk7XG4gIHJldHVybntcbiAgICAgIHR5cGU6ICdERUxFVEVfVVNFUicsXG4gICAgICBpbmRleFxuICB9XG59Il19